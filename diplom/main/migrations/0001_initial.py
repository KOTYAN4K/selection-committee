# Generated by Django 5.0.4 on 2024-05-28 22:35

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(default='applicants_photos/default.jpg', upload_to='applicants_photos/', verbose_name='Фото')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('patronymic', models.CharField(max_length=100, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('male', 'Мужской'), ('female', 'Женский')], default='male', max_length=10, verbose_name='Пол')),
                ('birth_date', models.DateField(verbose_name='Дата рождения')),
                ('email', models.EmailField(max_length=254, verbose_name='Эл.Почта')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона студента')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес проживания')),
                ('school', models.CharField(max_length=255, verbose_name='Школа')),
                ('graduation_date', models.CharField(choices=[('2021', '2021'), ('2022', '2022'), ('2023', '2023'), ('2024', '2024')], default=('2021', '2021'), max_length=20, verbose_name='Дата окончания школы')),
                ('education', models.CharField(choices=[('Основное общее', 'Основное общее'), ('Среднее(полное) общее образование', 'Среднее(полное) общее образование'), ('Начальное профессиональное образование', 'Начальное профессиональное образование'), ('Среднее профессиональное образование', 'Среднее профессиональное образование'), ('Высшее профессиональное образование', 'Высшее профессиональное образование')], default='Среднее(полное) общее образование', max_length=100, verbose_name='Образование')),
                ('status', models.CharField(choices=[('watching', 'Рассмотрение'), ('answered', 'Выдан ответ')], default='watching', max_length=20, verbose_name='Статус заявки')),
                ('consent', models.FileField(blank=True, null=True, upload_to='consents/', verbose_name='Согласие на обработку данных')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата отправки')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Заявка на регистрацию',
                'verbose_name_plural': 'Заявки на регистрацию',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Отделение',
                'verbose_name_plural': 'Отделения',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Школа',
                'verbose_name_plural': 'Школы',
            },
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_date', models.DateField(auto_now=True, verbose_name='Дата поступления')),
                ('number_of_5', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество пятерок')),
                ('number_of_4', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество четверок')),
                ('number_of_3', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество троек')),
                ('average_score', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=5, null=True, verbose_name='Средний балл')),
                ('internal_exam', models.DecimalField(blank=True, decimal_places=2, default=Decimal('0'), max_digits=5, null=True, verbose_name='Результаты экзамена')),
                ('application_status', models.CharField(choices=[('watching', 'Рассмотрение'), ('denied', 'Отказано'), ('accepted', 'Принят'), ('warn', 'Отправлен на заполнение')], default='watching', max_length=50, verbose_name='Статус заявки')),
                ('original_or_copy', models.BooleanField(blank=True, default=False, null=True, verbose_name='Оригинал или копия')),
                ('out_of_budget', models.BooleanField(blank=True, default=False, null=True, verbose_name='Внебюджет')),
                ('received_receipt', models.BooleanField(blank=True, default=False, null=True, verbose_name='Получил расписку')),
                ('internal_exam_conducted', models.BooleanField(blank=True, default=False, null=True, verbose_name='Вступительный экзамен проведен')),
                ('documents_collected', models.BooleanField(blank=True, default=False, null=True, verbose_name='Документы забраны')),
                ('application_in_gov_services', models.BooleanField(blank=True, default=False, null=True, verbose_name='Заявление в гос. услугах')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата отправки')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата обновления')),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to='main.applicant', verbose_name='Абитуриент')),
                ('department', models.ManyToManyField(blank=True, to='main.department', verbose_name='Отделение')),
            ],
            options={
                'verbose_name': 'Поступление',
                'verbose_name_plural': 'Поступления',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SNILS', models.CharField(blank=True, max_length=15, null=True, verbose_name='СНИЛС')),
                ('INN', models.CharField(blank=True, max_length=15, null=True, verbose_name='ИНН')),
                ('passport_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер паспорта')),
                ('issued_by', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кем выдан')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('certificate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Свидетельство')),
                ('FIS', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИС')),
                ('student', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document', to='main.applicant', verbose_name='Абитуриент')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='InternalExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateTimeField(blank=True, verbose_name='Дата экзамена')),
                ('students', models.ManyToManyField(related_name='exam', to='main.applicant', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Журнал вступительных экзаменов',
                'verbose_name_plural': 'Журналы вступительных экзаменов',
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interview_date', models.DateTimeField(blank=True, verbose_name='Дата собеседования')),
                ('students', models.ManyToManyField(to='main.applicant', verbose_name='Студент')),
            ],
            options={
                'verbose_name': 'Журнал собеседований',
                'verbose_name_plural': 'Журналы собеседований',
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mother_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО матери')),
                ('mother_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон матери')),
                ('father_full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='ФИО отца')),
                ('father_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефон отца')),
                ('student', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parents', to='main.applicant', verbose_name='Ребёнок')),
            ],
            options={
                'verbose_name': 'Родитель',
                'verbose_name_plural': 'Родители',
            },
        ),
        migrations.CreateModel(
            name='ApplicantAdmissionView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission_view_admission', to='main.admission', verbose_name='Поступление')),
                ('applicant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission_view_applicant', to='main.applicant', verbose_name='Абитуриент')),
                ('document', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission_view_document', to='main.document', verbose_name='Документ')),
                ('parent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='admission_view_parent', to='main.parent', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'Общая таблица',
                'verbose_name_plural': 'Общая таблица',
            },
        ),
    ]
